@using TournoiSalade.Data
@inject ITournament CurrentTournament
@inject DialogService DialogService


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">TournoiSalade</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Joueurs
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tours">
                <span class="oi oi-plus" aria-hidden="true"></span> Tours
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="classement">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Classement
            </NavLink>
        </div>
    </nav>

    <div class="d-grid col-10 mx-auto">
        <RadzenButton Text="Nouveau tournoi" ButtonStyle="ButtonStyle.Secondary" Click=@(args => DialogService.Confirm("Créer nouveau tournoi ?", "Nouveau tournoi", new ConfirmOptions() { OkButtonText = "Créer", CancelButtonText = "Annuler" })) />
    </div>

</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}

    protected override void OnInitialized()
    {
        DialogService.OnOpen += Open;
        DialogService.OnClose += Close;
    }

    public void Dispose()
    {
        // The DialogService is a singleton so it is advisable to unsubscribe.
        DialogService.OnOpen -= Open;
        DialogService.OnClose -= Close;
    }

    void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
    }

    void Close(dynamic result)
    {
        if(result != null && (bool)result)
            CurrentTournament.New();
    }
 }

